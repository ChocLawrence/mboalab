{"version":3,"sources":["./src/app/components/pages/account-verification/account-verification-routing.module.ts","./src/app/components/pages/account-verification/account-verification.module.ts","./src/app/components/pages/account-verification/account-verification.component.html","./src/app/components/pages/account-verification/account-verification.component.ts"],"names":[],"mappings":"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","file":"components-pages-account-verification-account-verification-module-ngfactory.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AccountVerificationComponent } from './account-verification.component';\n\nconst routes: Routes = [{ path: '', component: AccountVerificationComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AccountVerificationRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrModule } from 'ngx-toastr';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { AccountVerificationRoutingModule } from './account-verification-routing.module';\nimport { AccountVerificationComponent } from './account-verification.component';\nimport { SharedModule } from '../../shared/shared.module';\n\n@NgModule({\n  declarations: [AccountVerificationComponent],\n  imports: [\n    CommonModule,\n    AccountVerificationRoutingModule,\n    SharedModule,\n    ReactiveFormsModule,\n    ToastrModule.forRoot({\n      timeOut: 10000,\n      positionClass: 'toast-top-right',\n      preventDuplicates: true,\n    }),\n    FormsModule,\n    NgbModule\n  ]\n})\nexport class AccountVerificationModule { }\n","<section class=\"why-choose-area\">\n  <div class=\"container\">\n    <div class=\"row justify-content-center text-center\">\n      <div class=\"col-lg-8\">\n        <div class=\"section-title white-color mb-20 text-center\">\n          <div class=\"title-tag\">\n            <img\n              src=\"/assets/img/logo-2.png\"\n              width=\"150\"\n              class=\"d-inline-block align-top mr-2 mb-4\"\n              alt=\"\"\n            />\n          </div>\n\n          <div *ngIf=\"verification\">\n            <div class=\"title-tag mt-2 mb-3\">\n              <img src=\"/assets/img/success.png\" alt=\"\" width=\"\" height=\"150\" />\n            </div>\n\n            <h4 class=\"white\">Account verified successfully</h4>\n            <h5 class=\"white mt-2\">Let's get you started</h5>\n          </div>\n\n          <div *ngIf=\"!verification\">\n            <div class=\"title-tag mt-2 mb-3\">\n              <img\n                src=\"/assets/img/error-icon.png\"\n                alt=\"\"\n                width=\"\"\n                height=\"150\"\n              />\n            </div>\n\n            <h4 class=\"white\">An error occured.</h4>\n            <p class=\"text-3 text-muted white\" *ngIf=\"display\">\n              {{ \" You will be redirected to homepage in \" + display }}\n            </p>\n          </div>\n        </div>\n        <button\n          routerLink=\"/home\"\n          class=\"\n            btn\n            mt-50\n            login-btn\n            main-btn\n            small-size\n            btn-block\n            rounded-btn\n            icon-right\n          \"\n        >\n          Home\n          <i class=\"fal fa-long-arrow-right\"></i>\n        </button>\n      </div>\n    </div>\n  </div>\n  <div class=\"choose-dot\">\n    <img src=\"/assets/img/shape/choose-dot.png\" alt=\"img\" />\n  </div>\n  <div class=\"choose-shape\">\n    <img src=\"/assets/img/shape/choose-shape.png\" alt=\"img\" />\n  </div>\n</section>\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { CoreService } from '../../../core/core.service';\nimport { Router, NavigationEnd } from \"@angular/router\";\nimport { FormBuilder, Validators, FormGroup, FormArray } from '@angular/forms';\nimport { AuthenticationService } from '../../../services/authentication.service';\n\n\n@Component({\n  selector: 'app-account-verification',\n  templateUrl: './account-verification.component.html',\n  styleUrls: ['./account-verification.component.css']\n})\nexport class AccountVerificationComponent implements OnInit {\n\n  public display: any;\n  public loading = false;\n  public verification = false;\n  public state: any;\n  public verificationId: any;\n\n  constructor(public core: CoreService,\n    public router: Router,\n    private fb: FormBuilder, private authenticationservice: AuthenticationService) { }\n\n  ngOnInit(): void {\n    this.processVerification();\n  }\n\n\n  async processVerification() {\n    //check current url\n    let splitUrl = this.router.url.split('/');\n    this.verificationId = splitUrl[2];\n\n    if (!this.core.isEmptyOrNull(this.verificationId)) {\n\n      await this.verifyAccount(this.verificationId);\n\n    } else {\n      this.redirectToLogin();\n    }\n\n\n  }\n\n  async verifyAccount(id: string) {\n\n    this.loading = true;\n\n    await this.authenticationservice\n      .verifyAccount(id)\n      .then(res => {\n        this.loading = false;\n        this.verification = true;\n        this.timer(2);\n      })\n      .catch(e => {\n        this.loading = false;\n        this.verification = false;\n        this.timer(1);\n        this.core.handleError(e);\n      });\n\n  }\n\n  timer(minute: any) {\n    // let minute = 1;\n    let seconds: number = minute * 10;\n    let textSec: any = \"0\";\n    let statSec: number = 11;\n\n    const prefix = minute < 10 ? \"0\" : \"\";\n\n    const timer = setInterval(() => {\n      seconds--;\n      if (statSec != 0) statSec--;\n      else statSec = 10;\n\n      if (statSec < 10) {\n        textSec = \"0\" + statSec;\n      } else textSec = statSec;\n\n      this.display = `${prefix}${Math.floor(seconds / 60)}:${textSec}`;\n\n      if (seconds == 0) {\n        this.redirectToLogin();\n        clearInterval(timer);\n      }\n    }, 1000);\n  }\n\n  redirectToLogin() {\n    this.core.showSuccess('Success', 'Redirecting to login..')\n    this.router.navigate([\"/login\"]);\n  }\n\n\n\n}\n"],"sourceRoot":"webpack:///"}